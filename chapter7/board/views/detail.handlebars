<h1>{{title}}</h1>
{{#with post}} <!-- 1. post 객체를 쉽게 사용하도록 with로 감싸기 -->
<h2 class="text-xl">{{title}}</h2> <!-- 2. 제목-->
<div>
    작성자 :<b>{{writer}}</b> <!-- 3. 작성자 -->
</div>
<div>
    조회수 : {{hits}} | 작성 일시 : {{dataString createdDt}} <!-- 4 조회수 및 작성일 -->
    <button onclick="modifyPost()">수정</button>
    <button onclick="deletePost()">삭제</button>
</div>

<div>
    <pre>{{content}}</pre>
</div>

<section>
    <div>
        <h3>3개의 댓글이 있습니다.</h3>
    </div>

    <form method="post" action="write-comment">
        <div>
            <div>
                <input type="text" name="name" placeholder="이름">
                <input type="password" name="password" placeholder="비밀번호">
            </div>
        </div>
        
        <div>
            <textarea cols="40" rows="3" name="content" placeholder="댓글을 입력해주세요."></textarea>
            <br><br> <button>댓글 쓰기</button> <!--type을 submit으로 주면 화면이 갱신되므로 일반 버튼으로 선언. Ajax로 작성 예정-->
        </div>
    </form>
</section>

<section>
    <div>
        <div>
            작성자 : <b>댓글 작성자</b>
        </div>
        <div>
            작성일시: 2023-06-27 00:00:00
            <button onclick="deleteComment('1')">삭제</button>
        </div>
    </div>
    <div>
        <pre>{{comment}}</pre>
    </div>
</section>
{{/with}}

<footer>
    <div>
        <a href="/">목록으로</a>
    </div>
</footer>

<script>
    const postOption = {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
    }

    async function modifyPost() {
        const password = prompt("패스워드를 입력해주세요");
        // 1.프롬프트에서 취소를 누른 경우 처리
        if(!password){
            return;
        }

        // 2. check-password API 실행
        const result = await fetch('/check-password', {
            ...postOption,
            body: JSON.stringify({id: "{{post._id}}", password})
        });

        // 3.json 함수를 실행하는 경우도 await를 해줘야 함
        const data = await result.json();

        // 4. 패스워드가 맞는 경우 수정 페이지로 이동
        if(data.isExist){
            document.location = "/modify/{{post._id}}"
        } else{
            alert("패스워드가 올바르지 않습니다.");
        }
    }

    const deleteOption = {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json',
        },
    }
    async function deletePost() {
        // 1. 프롬프트로 값 입력 받기
        const password = promt("삭제하려면 패스워드를 입력해주세요");
        // 프롬프트에서 취소를 누른 경우 처리
        if(!password){
            return;
        }
        // 2. fetch API를 사용해 delete API 호출
        const result = await fetch("/delete", {
            ...deleteOption,
            body: JSON.stringify({id:"{{post._id}}", password})
        });

        // 3. delete API의 결과에 따라 다른 메시지 출력
        const data = await result.json();
        if(!data.isSuccess){
            alert("삭제에 실패했습니다. 패스워드를 확인해주세요.");
            return;
        }
        document.location = "/";
    }
</script>